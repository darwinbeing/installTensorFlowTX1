--- compiler/build.gradle
+++ compiler/build.gradle
@@ -48,6 +48,8 @@
     }
     gcc(Gcc) {
       target("ppcle_64")
+      target("linux_arm-v7")
+      target("aarch_64")
     }
     clang(Clang) {
     }
@@ -63,11 +65,17 @@
     ppcle_64 {
       architecture "ppcle_64"
     }
+    armv7l {
+      architecture "armv7l"
+    }
+    aarch_64 {
+      architecture "aarch_64"
+    }
   }
 
   components {
     java_plugin(NativeExecutableSpec) {
-      if (arch in ['x86_32', 'x86_64', 'ppcle_64']) {
+      if (arch in ['x86_32', 'x86_64', 'ppcle_64', 'armv7l', 'aarch_64']) {
         // If arch is not within the defined platforms, we do not specify the
         // targetPlatform so that Gradle will choose what is appropriate.
         targetPlatform arch
@@ -94,9 +102,8 @@
           // Link protoc, protobuf, libgcc and libstdc++ statically.
           // Link other (system) libraries dynamically.
           // Clang under OSX doesn't support these options.
-          linker.args "-Wl,-Bstatic", "-lprotoc", "-lprotobuf", "-static-libgcc",
-                      "-static-libstdc++",
-                      "-Wl,-Bdynamic", "-lpthread", "-s"
+          linker.args "-static", "-lprotoc", "-lprotobuf", "-static-libgcc", "-static-libstdc++",
+                      "-pthread", "-s"
         }
         addEnvArgs("LDFLAGS", linker.args)
       } else if (toolChain in VisualCpp) {
